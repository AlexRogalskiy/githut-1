{"version":3,"sources":["../node_modules/github-colors/lib/index.js"],"names":["GitHubColors","this","colors","extensions","prototype","init","ext","require","get","lang","handleOthers","found","color","module","exports"],"mappings":";oGASA,SAASA,IACLC,KAAKC,OAAS,KACdD,KAAKE,WAAa,KAYtBH,EAAaI,UAAUC,KAAO,SAAUC,GACpC,OAAIA,EACOL,KAAKE,WAAaF,KAAKE,YAAcI,EAAQ,KAGjDN,KAAKC,OAASD,KAAKC,QAAUK,EAAQ,MAahDP,EAAaI,UAAUI,IAAM,SAAUC,EAAMC,GACzCT,KAAKI,OACL,IAAIM,EAAQV,KAAKC,OAAOO,GAKxB,OAJIC,KACAC,EAAQA,GAAS,IACXC,MAAQD,EAAMC,OAAS,QAE1BD,GAaXX,EAAaI,UAAUE,IAAM,SAAUA,EAAKI,GACxCT,KAAKI,MAAK,GACV,IAAIM,EAAQV,KAAKE,WAAWG,GAK5B,OAJII,KACAC,EAAQA,GAAS,IACXC,MAAQD,EAAMC,OAAS,QAE1BD,GAGXE,EAAOC,QAAU,IAAId,G","file":"static/js/5.e565c7c4.chunk.js","sourcesContent":["\"use strict\";\n\n/*!\n * GitHubColors\n *\n * @name GitHubColors\n * @function\n * @return {undefined}\n */\nfunction GitHubColors() {\n    this.colors = null;\n    this.extensions = null;\n}\n\n/**\n * init\n * Inits the GitHub extensions/colors.\n *\n * @name init\n * @function\n * @param {Boolean} ext If `true`, the extensions will be initialized.\n * @return {Object} The `extensions` or `colors` object.\n */\nGitHubColors.prototype.init = function (ext) {\n    if (ext) {\n        return this.extensions = this.extensions || require(\"./extensions\");\n    }\n\n    return this.colors = this.colors || require(\"./colors\");\n};\n\n/**\n * get\n * Gets the color object for the provided language.\n *\n * @name get\n * @function\n * @param {String} lang The language to get the color for.\n * @param {Boolean} handleOthers If `false` and the color is not found `undefined` will be returned. Otherwise a gray color will be returned.\n * @return {Object|undefined} The color that was found.\n */\nGitHubColors.prototype.get = function (lang, handleOthers) {\n    this.init();\n    var found = this.colors[lang];\n    if (handleOthers) {\n        found = found || {};\n        found.color = found.color || \"#ccc\";\n    }\n    return found;\n};\n\n/**\n * ext\n * Get the color object for the provided extension.\n *\n * @name ext\n * @function\n * @param {String} ext The extension to get the color for.\n * @param {Boolean} handleOthers If `false` and the color is not found `undefined` will be returned. Otherwise a gray color will be returned.\n * @return {Object|undefined} The color that was found.\n */\nGitHubColors.prototype.ext = function (ext, handleOthers) {\n    this.init(true);\n    var found = this.extensions[ext];\n    if (handleOthers) {\n        found = found || {};\n        found.color = found.color || \"#ccc\";\n    }\n    return found;\n};\n\nmodule.exports = new GitHubColors();"],"sourceRoot":""}